<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Oduesp</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-07T10:38:56.274Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Oduesp</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Konjak Record——2019.05.07</title>
    <link href="http://yoursite.com/2019/05/07/Algorithm0507/"/>
    <id>http://yoursite.com/2019/05/07/Algorithm0507/</id>
    <published>2019-05-07T10:17:57.142Z</published>
    <updated>2019-05-07T10:38:56.274Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常规题"><a href="#常规题" class="headerlink" title="常规题"></a>常规题</h2><h3 id="1、P1216-IOI1994-USACO1-5-数字三角形-Number-Triangles"><a href="#1、P1216-IOI1994-USACO1-5-数字三角形-Number-Triangles" class="headerlink" title="1、P1216 [IOI1994][USACO1.5]数字三角形 Number Triangles"></a><a href="https://www.luogu.org/problemnew/show/P1216" target="_blank" rel="noopener">1、P1216 [IOI1994][USACO1.5]数字三角形 Number Triangles</a></h3><p>R:水题</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1005</span>;</span><br><span class="line"><span class="keyword">int</span> f[maxn][maxn], dp[maxn][maxn], N;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span> >> N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= i; j++) {</span><br><span class="line">            <span class="built_in">cin</span> >> f[i][j];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (i == N) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= N; j++) {</span><br><span class="line">                dp[N][j] = f[N][j];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = N - <span class="number">1</span>; i >= <span class="number">1</span>; i--) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= i; j++) {</span><br><span class="line">            dp[i][j] = max(dp[i + <span class="number">1</span>][j + <span class="number">1</span>], dp[i + <span class="number">1</span>][j]) + f[i][j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> << dp[<span class="number">1</span>][<span class="number">1</span>] << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="难题"><a href="#难题" class="headerlink" title="难题"></a>难题</h2><h3 id="2、P1169-ZJOI2007-棋盘制作"><a href="#2、P1169-ZJOI2007-棋盘制作" class="headerlink" title="2、P1169 [ZJOI2007]棋盘制作"></a><a href="https://www.luogu.org/problemnew/show/P1169" target="_blank" rel="noopener">2、P1169 [ZJOI2007]棋盘制作</a></h3><p>R:悬线法</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2000</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> rec_ans = <span class="number">1</span>, square_ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> up[maxn][maxn], L[maxn][maxn], R[maxn][maxn], f[maxn][maxn], N, M;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span> >> N >> M;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= M; j++) {</span><br><span class="line">            <span class="built_in">cin</span> >> f[i][j];</span><br><span class="line">            L[i][j] = R[i][j] = j;</span><br><span class="line">            up[i][j] = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//预处理L</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j <= M; j++) {</span><br><span class="line">            <span class="keyword">if</span> (f[i][j - <span class="number">1</span>] != f[i][j]) {</span><br><span class="line">                L[i][j] = L[i][j - <span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//预处理R</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = M - <span class="number">1</span>; j >= <span class="number">1</span>; j--) {</span><br><span class="line">            <span class="keyword">if</span> (f[i][j + <span class="number">1</span>] != f[i][j]) {</span><br><span class="line">                R[i][j] = R[i][j + <span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= M; j++) {</span><br><span class="line">            <span class="keyword">if</span> (f[i][j] != f[i - <span class="number">1</span>][j] && i != <span class="number">1</span>) {</span><br><span class="line">                up[i][j] = up[i - <span class="number">1</span>][j] + <span class="number">1</span>;</span><br><span class="line">                L[i][j] = max(L[i - <span class="number">1</span>][j], L[i][j]);</span><br><span class="line">                R[i][j] = min(R[i - <span class="number">1</span>][j], R[i][j]);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">int</span> width = R[i][j] - L[i][j] + <span class="number">1</span>;</span><br><span class="line">            rec_ans = max(rec_ans, width * up[i][j]);</span><br><span class="line">            square_ans = max(square_ans, min(width, up[i][j]) * min(width, up[i][j]));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> << square_ans << <span class="built_in">endl</span></span><br><span class="line">         << rec_ans << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="3、P1233-木棍加工"><a href="#3、P1233-木棍加工" class="headerlink" title="3、P1233 木棍加工"></a><a href="https://www.luogu.org/problemnew/show/P1233" target="_blank" rel="noopener">3、P1233 木棍加工</a></h3><p>R:模拟+Dilworth定理+单调上升子序列</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5005</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 手动模拟一下，保证单调性，先按照l降序排列</span></span><br><span class="line"><span class="comment"> * l相同按照w降序排列，由dilworth定理可知，求w的最长上升子序列长度即可。</span></span><br><span class="line"><span class="comment"> * 求最长上升子序列可以用O(nlog2N)算法，但是我太懒了没用，因为N太小了只有5000.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">    <span class="keyword">int</span> l, w;</span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Node& a, <span class="keyword">const</span> Node& b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (a.l == b.l)</span><br><span class="line">        <span class="keyword">return</span> a.w > b.w;</span><br><span class="line">    <span class="keyword">return</span> a.l > b.l;</span><br><span class="line">}</span><br><span class="line">Node nodes[maxn];</span><br><span class="line"><span class="keyword">int</span> N, dp[maxn], ans = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span> >> N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> nodes[i].l >> nodes[i].w;</span><br><span class="line">    }</span><br><span class="line">    sort(nodes + <span class="number">1</span>, nodes + <span class="number">1</span> + N, cmp);</span><br><span class="line">    <span class="comment">//O(N2)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        dp[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j < i; j++) {</span><br><span class="line">            <span class="keyword">if</span> (nodes[j].w < nodes[i].w) {</span><br><span class="line">                dp[i] = max(dp[i], dp[j] + <span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        ans = max(ans, dp[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> << ans << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="4、P1270-“访问”美术馆"><a href="#4、P1270-“访问”美术馆" class="headerlink" title="4、P1270 “访问”美术馆"></a><a href="https://www.luogu.org/problemnew/show/P1270" target="_blank" rel="noopener">4、P1270 “访问”美术馆</a></h3><p>R:树形dp入门题,注意走回来的时间，因此时间*2</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 如果是0，则分为两个走廊。注意走回来的时间也要算进去</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">    <span class="keyword">int</span> l, r, time, num;</span><br><span class="line">};</span><br><span class="line">Node nodes[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">int</span> cnt, S, dp[<span class="number">105</span>][<span class="number">605</span>],root;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span>& x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> t, n;</span><br><span class="line">    <span class="built_in">cin</span> >> t >> n;</span><br><span class="line">    x = ++cnt;</span><br><span class="line">    <span class="keyword">if</span> (n != <span class="number">0</span>) {</span><br><span class="line">        nodes[x].num = n, nodes[x].time = <span class="number">2</span> * t;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    nodes[x].time = <span class="number">2</span> * t;</span><br><span class="line">    build(nodes[x].l);</span><br><span class="line">    build(nodes[x].r);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//叶子节点</span></span><br><span class="line">    <span class="keyword">if</span> (nodes[x].l == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = nodes[x].time; j <= S; j++) {</span><br><span class="line">            dp[x][j] = max((j - nodes[x].time) / <span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (dp[x][j] > nodes[x].num) {</span><br><span class="line">                dp[x][j] = nodes[x].num;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    dfs(nodes[x].l);</span><br><span class="line">    dfs(nodes[x].r);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = nodes[x].time; i <= S; i++) {</span><br><span class="line">        <span class="keyword">int</span> rest = i - nodes[x].time;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j <= rest; j++) {</span><br><span class="line">            dp[x][i] = max(dp[x][i], dp[nodes[x].l][j] + dp[nodes[x].r][rest - j]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span> >> S;</span><br><span class="line">    S--;</span><br><span class="line">    build(root);</span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span> << dp[<span class="number">1</span>][S] << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="P1271-聚会的快乐"><a href="#P1271-聚会的快乐" class="headerlink" title="P1271 聚会的快乐"></a><a href="https://www.luogu.org/problemnew/show/P1271" target="_blank" rel="noopener">P1271 聚会的快乐</a></h3><p>R:树形dp</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> son[<span class="number">110</span>];</span><br><span class="line"><span class="built_in">map</span><<span class="built_in">string</span>, <span class="keyword">int</span>> id;</span><br><span class="line"><span class="keyword">int</span> n, st, f[<span class="number">110</span>][<span class="number">2</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> {</span></span><br><span class="line">    <span class="built_in">string</span> s, fa;</span><br><span class="line">    <span class="keyword">int</span> w;</span><br><span class="line">} a[<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    f[x][<span class="number">0</span>] = <span class="number">0</span>, f[x][<span class="number">1</span>] = a[x].w;</span><br><span class="line">    <span class="keyword">if</span> (son[x].size() == <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i < son[x].size(); i++) {</span><br><span class="line">        dp(son[x][i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i < son[x].size(); i++) {</span><br><span class="line">        sum += max(f[son[x][i]][<span class="number">0</span>], f[son[x][i]][<span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    f[x][<span class="number">0</span>] = sum;</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i < son[x].size(); i++) {</span><br><span class="line">        sum += f[son[x][i]][<span class="number">0</span>];</span><br><span class="line">    }</span><br><span class="line">    f[x][<span class="number">1</span>] += sum;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> >> n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= n; i++)</span><br><span class="line">        <span class="built_in">cin</span> >> a[i].s >> a[i].w >> a[i].fa, id[a[i].s] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= n; i++)</span><br><span class="line">        son[id[a[i].fa]].push_back(i);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (!id[a[i].fa]) {</span><br><span class="line">            st = i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    dp(st);</span><br><span class="line">    <span class="built_in">cout</span> << max(f[st][<span class="number">0</span>], f[st][<span class="number">1</span>])<<<span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="P1273-有线电视网"><a href="#P1273-有线电视网" class="headerlink" title="P1273 有线电视网"></a><a href="https://www.luogu.org/problemnew/show/P1273" target="_blank" rel="noopener">P1273 有线电视网</a></h3><p>R:树状背包,滚动数组,dp[v][k]表示v节点为k个用户提供服务的最大收益。<br>dp[v][k] = max(dp[v][k],dp[v][k-j] + dp[son][j]-cost)(son为v的某个子节点)<br>三维数组时dp[i][v][k]表示v的前i棵子树选择k个节点的最大收益<br>dp[i][v][k] = max(dp[i-1][v][k-j]+dp[son的总儿子数][son][j]-cost,dp[i-1][v][k]),因此只需要枚举k时由大到小枚举，就可以节省一维的空间。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">3000</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn], pay[maxn], tot, N, M, du[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">    <span class="keyword">int</span> len, v;</span><br><span class="line">    Node* next;</span><br><span class="line">};</span><br><span class="line">Node *h[maxn], pool[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add_edge</span><span class="params">(<span class="keyword">int</span> u, <span class="keyword">int</span> v, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Node* p = &pool[tot++];</span><br><span class="line">    p->v = v, p->len = len, p->next = h[u], h[u] = p;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (h[x] == <span class="literal">NULL</span>) {</span><br><span class="line">        dp[x][<span class="number">1</span>] = pay[x];</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(dp[x], ~<span class="number">0x3f</span>, <span class="keyword">sizeof</span>(dp[x]));</span><br><span class="line">    dp[x][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (Node* p = h[x]; p; p = p->next) {</span><br><span class="line">        <span class="keyword">int</span> v = p->v;</span><br><span class="line">        <span class="keyword">int</span> t = dfs(v);</span><br><span class="line">        sum += t;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = sum; i >= <span class="number">0</span>; i--) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= t; j++) {</span><br><span class="line">                <span class="keyword">if</span> (i >= j) {</span><br><span class="line">                    dp[x][i] = max(dp[x][i], dp[v][j] + dp[x][i - j] - p->len);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span> >> N >> M;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N - M; i++) {</span><br><span class="line">        <span class="keyword">int</span> K;</span><br><span class="line">        <span class="built_in">cin</span> >> K;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= K; j++) {</span><br><span class="line">            <span class="keyword">int</span> a, c;</span><br><span class="line">            <span class="built_in">cin</span> >> a >> c;</span><br><span class="line">            add_edge(i, a, c);</span><br><span class="line">            du[c]++;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = N - M + <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> pay[i];</span><br><span class="line">    }</span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = M; j >= <span class="number">0</span>; j--) {</span><br><span class="line">        <span class="keyword">if</span> (dp[<span class="number">1</span>][j] >= <span class="number">0</span>) {</span><br><span class="line">            <span class="built_in">cout</span> << j << <span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常规题&quot;&gt;&lt;a href=&quot;#常规题&quot; class=&quot;headerlink&quot; title=&quot;常规题&quot;&gt;&lt;/a&gt;常规题&lt;/h2&gt;&lt;h3 id=&quot;1、P1216-IOI1994-USACO1-5-数字三角形-Number-Triangles&quot;&gt;&lt;a href=&quot;#1、
      
    
    </summary>
    
      <category term="Konjak Records" scheme="http://yoursite.com/categories/Konjak-Records/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="悬线法" scheme="http://yoursite.com/tags/%E6%82%AC%E7%BA%BF%E6%B3%95/"/>
    
      <category term="Dilworth定理" scheme="http://yoursite.com/tags/Dilworth%E5%AE%9A%E7%90%86/"/>
    
      <category term="树形dp" scheme="http://yoursite.com/tags/%E6%A0%91%E5%BD%A2dp/"/>
    
  </entry>
  
  <entry>
    <title>Konjak Record——2019.05.06</title>
    <link href="http://yoursite.com/2019/05/06/Algorithm0506/"/>
    <id>http://yoursite.com/2019/05/06/Algorithm0506/</id>
    <published>2019-05-06T10:32:45.766Z</published>
    <updated>2019-05-06T10:51:42.086Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常规题"><a href="#常规题" class="headerlink" title="常规题"></a>常规题</h2><h3 id="1、P1057-传球游戏"><a href="#1、P1057-传球游戏" class="headerlink" title="1、P1057 传球游戏"></a><a href="https://www.luogu.org/problemnew/show/P1057" target="_blank" rel="noopener">1、P1057 传球游戏</a></h3><p>R:水题，思路很好想。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">35</span>][<span class="number">35</span>], N, M;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> >> N >> M;</span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= M; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= N; j++) {</span><br><span class="line">            <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (j + <span class="number">1</span> > N) {</span><br><span class="line">                tmp += dp[<span class="number">1</span>][i - <span class="number">1</span>];</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tmp += dp[j + <span class="number">1</span>][i - <span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (j - <span class="number">1</span> < <span class="number">1</span>) {</span><br><span class="line">                tmp += dp[N][i - <span class="number">1</span>];</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tmp += dp[j - <span class="number">1</span>][i - <span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">            dp[j][i] = tmp;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> << dp[<span class="number">1</span>][M] << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="2、P1077-摆花"><a href="#2、P1077-摆花" class="headerlink" title="2、P1077 摆花"></a><a href="https://www.luogu.org/problemnew/show/P1077" target="_blank" rel="noopener">2、P1077 摆花</a></h3><p>R:水题，思路很好想，我天天只会刷水题，其他的题都不会。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1000007</span>;</span><br><span class="line"><span class="keyword">int</span> N, M, dp[<span class="number">105</span>], f[<span class="number">105</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> >> N >> M;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> f[i];</span><br><span class="line">    }</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = M; j >= <span class="number">0</span>; j--) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k <= f[i] && j - k >= <span class="number">0</span>; k++) {</span><br><span class="line">                dp[j] = (dp[j - k] + dp[j]) % mod;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> << dp[M] << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="3、P1115-最大子段和"><a href="#3、P1115-最大子段和" class="headerlink" title="3、P1115 最大子段和"></a><a href="https://www.luogu.org/problemnew/show/P1115" target="_blank" rel="noopener">3、P1115 最大子段和</a></h3><p>R:裸的最大子段和，很简单。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">200000</span> + <span class="number">10</span>, inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[maxn], f[maxn], ans = -inf;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> >> N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> f[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        dp[i] = max(dp[i - <span class="number">1</span>] + f[i], f[i]);</span><br><span class="line">        ans = max(ans, dp[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> << ans << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="4、P1130-红牌"><a href="#4、P1130-红牌" class="headerlink" title="4、P1130 红牌"></a><a href="https://www.luogu.org/problemnew/show/P1130" target="_blank" rel="noopener">4、P1130 红牌</a></h3><p>R:水</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2005</span>, inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn], chess[maxn][maxn], N, M;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> >> N >> M;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= M; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= N; j++) {</span><br><span class="line">            <span class="built_in">cin</span> >> chess[i][j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= M; j++) {</span><br><span class="line">            <span class="keyword">int</span> tmp = dp[i - <span class="number">1</span>][j];</span><br><span class="line">            <span class="keyword">if</span> (j - <span class="number">1</span> == <span class="number">0</span>) {</span><br><span class="line">                tmp = min(dp[i - <span class="number">1</span>][M], tmp);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                tmp = min(dp[i - <span class="number">1</span>][j - <span class="number">1</span>], tmp);</span><br><span class="line">            }</span><br><span class="line">            tmp += chess[j][i];</span><br><span class="line">            dp[i][j] = tmp;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> ans = inf;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= M; i++) {</span><br><span class="line">        ans = min(ans, dp[N][i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> << ans << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="错题"><a href="#错题" class="headerlink" title="错题"></a>错题</h2><h3 id="5、P1103-书本整理"><a href="#5、P1103-书本整理" class="headerlink" title="5、P1103 书本整理"></a><a href="https://www.luogu.org/problemnew/show/P1103" target="_blank" rel="noopener">5、P1103 书本整理</a></h3><p>R:dp[i][k]表示前i个删除k个，前必须保留i的最小不整齐度。dp[i][k] = min(dp[j][k-(i-j-1)]+abs(w[i]-w[j]),注意细节:dp[i][i-1] = 0</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">105</span>][<span class="number">105</span>], N, K, ans = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">    <span class="keyword">int</span> h, w;</span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Node& a, <span class="keyword">const</span> Node& b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.h < b.h;</span><br><span class="line">}</span><br><span class="line">Node nodes[<span class="number">105</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Abs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> x > <span class="number">0</span> ? x : -x;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">Min</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a > b ? b : a;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> >> N >> K;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> nodes[i].h >> nodes[i].w;</span><br><span class="line">    }</span><br><span class="line">    sort(nodes + <span class="number">1</span>, nodes + <span class="number">1</span> + N, cmp);</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j <= K; j++) {</span><br><span class="line">            <span class="comment">//前i个取走j个，而且第i个必须留下。</span></span><br><span class="line">            <span class="keyword">if</span> (i - <span class="number">1</span> < j) {</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (i - <span class="number">1</span> == j) {</span><br><span class="line">                dp[i][j] = <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = i - <span class="number">1</span>; k >= <span class="number">1</span>; k--) {</span><br><span class="line">                <span class="keyword">if</span> (k > j - (i - k - <span class="number">1</span>) && j - (i - k - <span class="number">1</span>) >= <span class="number">0</span>) {</span><br><span class="line">                    dp[i][j] = Min(dp[i][j], dp[k][j - (i - k - <span class="number">1</span>)] + Abs(nodes[i].w - nodes[k].w));</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">if</span> (K - (N - i) >= <span class="number">0</span>) {</span><br><span class="line">            ans = min(dp[i][K - (N - i)], ans);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> << ans << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="6、P1108-低价购买"><a href="#6、P1108-低价购买" class="headerlink" title="6、P1108 低价购买"></a><a href="https://www.luogu.org/problemnew/show/P1108" target="_blank" rel="noopener">6、P1108 低价购买</a></h3><p>R:N<=5000,求最长下降子序列用O(N^2)算法没有问题。求不重复的方案数：g[i]表示以i结尾的子串方案数，若f[j]+1=f[i]且a[j]>a[i],则g[i] += g[j],若f[j]=1时则g[j]=1,最终统计时将f[i]=mx的g[i]加起来即可。但是这里面有重复的部分，当f[i]==f[j]且a[i]==a[j]时，需要将这部分去掉。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5005</span>;</span><br><span class="line"><span class="keyword">int</span> N, f[maxn];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> dp[maxn], g[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> >> N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> f[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//O(N^2)，N小于等于5000没问题</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        dp[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= i - <span class="number">1</span>; j++) {</span><br><span class="line">            <span class="keyword">if</span> (f[j] > f[i]) {</span><br><span class="line">                dp[i] = max(dp[j] + <span class="number">1</span>, dp[i]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">if</span> (dp[i] == <span class="number">1</span>) {</span><br><span class="line">            g[i] = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= i - <span class="number">1</span>; j++) {</span><br><span class="line">            <span class="keyword">if</span> (dp[j] == dp[i] && f[j] == f[i]) {</span><br><span class="line">                g[j] = <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (dp[j] + <span class="number">1</span> == dp[i] && f[j] > f[i]) {</span><br><span class="line">                g[i] += g[j];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">0</span>, mx = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        mx = max(dp[i], mx);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">if</span> (dp[i] == mx) {</span><br><span class="line">            ans += g[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> << mx << <span class="string">" "</span> << ans << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常规题&quot;&gt;&lt;a href=&quot;#常规题&quot; class=&quot;headerlink&quot; title=&quot;常规题&quot;&gt;&lt;/a&gt;常规题&lt;/h2&gt;&lt;h3 id=&quot;1、P1057-传球游戏&quot;&gt;&lt;a href=&quot;#1、P1057-传球游戏&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="Konjak Records" scheme="http://yoursite.com/categories/Konjak-Records/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Konjak Record——2019.05.02</title>
    <link href="http://yoursite.com/2019/05/02/Algorithm0502/"/>
    <id>http://yoursite.com/2019/05/02/Algorithm0502/</id>
    <published>2019-05-02T04:01:40.078Z</published>
    <updated>2019-05-02T13:12:31.019Z</updated>
    
    <content type="html"><![CDATA[<h2 id="模板题"><a href="#模板题" class="headerlink" title="模板题"></a>模板题</h2><h3 id="P3834-【模板】可持久化线段树-1（主席树）"><a href="#P3834-【模板】可持久化线段树-1（主席树）" class="headerlink" title="P3834 【模板】可持久化线段树 1（主席树）"></a><a href="https://www.luogu.org/problemnew/show/P3834" target="_blank" rel="noopener">P3834 【模板】可持久化线段树 1（主席树）</a></h3><p>R:求区间第k大，主席树方法，注意离散化的方法，以及二分查找。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> root[maxn], N, Q, f[maxn], cnt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">    <span class="keyword">int</span> l, r, sum;</span><br><span class="line">};</span><br><span class="line">Node T[maxn * <span class="number">40</span>];</span><br><span class="line"><span class="built_in">vector</span><<span class="keyword">int</span>> v;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">getid</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> lower_bound(v.begin(), v.end(), x) - v.begin() + <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">int</span> f = <span class="number">1</span>, r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> c = getchar();</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(c)) {</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">'-'</span>)</span><br><span class="line">            f = <span class="number">-1</span>;</span><br><span class="line">        c = getchar();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(c)) {</span><br><span class="line">        r = <span class="number">10</span> * r + c - <span class="string">'0'</span>;</span><br><span class="line">        c = getchar();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> f * r;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pos, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span>& x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    T[++cnt] = T[y], x = cnt;</span><br><span class="line">    T[cnt].sum += <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (l == r) {</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) >> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (pos <= mid) {</span><br><span class="line">        update(pos, l, mid, T[x].l, T[y].l);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        update(pos, mid + <span class="number">1</span>, r, T[x].r, T[y].r);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (l == r) {</span><br><span class="line">        <span class="keyword">return</span> l;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> sum = T[T[y].l].sum - T[T[x].l].sum;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) >> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (sum >= k) {</span><br><span class="line">        <span class="keyword">return</span> query(l, mid, T[x].l, T[y].l, k);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">return</span> query(mid + <span class="number">1</span>, r, T[x].r, T[y].r, k - sum);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    N = read(), Q = read();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        f[i] = read();</span><br><span class="line">        v.push_back(f[i]);</span><br><span class="line">    }</span><br><span class="line">    sort(v.begin(), v.end());</span><br><span class="line">    v.erase(unique(v.begin(), v.end()), v.end());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">int</span> id = getid(f[i]);</span><br><span class="line">        update(id, <span class="number">1</span>, N, root[i], root[i - <span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= Q; i++) {</span><br><span class="line">        <span class="keyword">int</span> x, y, k;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &x, &y, &k);</span><br><span class="line">        <span class="keyword">int</span> q = query(<span class="number">1</span>, N, root[x - <span class="number">1</span>], root[y], k);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, v[q - <span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="P3372-【模板】线段树-1"><a href="#P3372-【模板】线段树-1" class="headerlink" title="P3372 【模板】线段树 1"></a><a href="https://www.luogu.org/problemnew/show/P3834" target="_blank" rel="noopener">P3372 【模板】线段树 1</a></h3><p>R:线段树区间更新，模板题</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100000</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> seg[maxn * <span class="number">4</span>], add[maxn * <span class="number">4</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> f[maxn], N, M;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> cur)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (l == r) {</span><br><span class="line">        seg[cur] = f[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">    build(l, mid, cur << <span class="number">1</span>);</span><br><span class="line">    build(mid + <span class="number">1</span>, r, cur << <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    seg[cur] = seg[cur << <span class="number">1</span>] + seg[cur << <span class="number">1</span> | <span class="number">1</span>];</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> cur)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (add[cur]) {</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">        seg[cur << <span class="number">1</span>] += (mid - l + <span class="number">1</span>) * add[cur];</span><br><span class="line">        seg[cur << <span class="number">1</span> | <span class="number">1</span>] += (r - mid) * add[cur];</span><br><span class="line">        add[cur << <span class="number">1</span>] += add[cur];</span><br><span class="line">        add[cur << <span class="number">1</span> | <span class="number">1</span>] += add[cur];</span><br><span class="line">        add[cur] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k, <span class="keyword">int</span> cur)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (l >= L && r <= R) {</span><br><span class="line">        add[cur] += k;</span><br><span class="line">        seg[cur] += k * (r - l + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    pushdown(l, r, cur);</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) >> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (mid >= L) {</span><br><span class="line">        update(L, R, l, mid, k, cur << <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (mid < R) {</span><br><span class="line">        update(L, R, mid + <span class="number">1</span>, r, k, cur << <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">    seg[cur] = seg[cur << <span class="number">1</span>] + seg[cur << <span class="number">1</span> | <span class="number">1</span>];</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> cur)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (l >= L && r <= R) {</span><br><span class="line">        <span class="keyword">return</span> seg[cur];</span><br><span class="line">    }</span><br><span class="line">    pushdown(l, r, cur);</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) >> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (mid >= L) {</span><br><span class="line">        sum += query(L, R, l, mid, cur << <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (mid < R) {</span><br><span class="line">        sum += query(L, R, mid + <span class="number">1</span>, r, cur << <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span> >> N >> M;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> f[i];</span><br><span class="line">    }</span><br><span class="line">    build(<span class="number">1</span>, N, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= M; i++) {</span><br><span class="line">        <span class="keyword">int</span> w, x, y, k;</span><br><span class="line">        <span class="built_in">cin</span> >> w >> x >> y;</span><br><span class="line">        <span class="keyword">if</span> (w == <span class="number">1</span>) {</span><br><span class="line">            <span class="built_in">cin</span> >> k;</span><br><span class="line">            update(x, y, <span class="number">1</span>, N, k, <span class="number">1</span>);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">long</span> <span class="keyword">long</span> q = query(x, y, <span class="number">1</span>, N, <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">cout</span> << q << <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="P3919-【模板】可持久化数组（可持久化线段树-平衡树）"><a href="#P3919-【模板】可持久化数组（可持久化线段树-平衡树）" class="headerlink" title="P3919 【模板】可持久化数组（可持久化线段树/平衡树）"></a><a href="https://www.luogu.org/problemnew/show/P3919" target="_blank" rel="noopener">P3919 【模板】可持久化数组（可持久化线段树/平衡树）</a></h3><p>R:主席树,注意回溯时全局变量的变化，尤其是build那里。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> root[maxn], cnt, N, M;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">    <span class="keyword">int</span> l, r, v;</span><br><span class="line">};</span><br><span class="line">Node T[maxn * <span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span>& x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//注意这里cnt是全局变量，回溯时会改变，所以不能用T[cnt],要用T[x]</span></span><br><span class="line">    x = ++cnt;</span><br><span class="line">    <span class="keyword">if</span> (l == r) {</span><br><span class="line">        <span class="built_in">cin</span> >> T[x].v;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) >> <span class="number">1</span>;</span><br><span class="line">    build(l, mid, T[x].l);</span><br><span class="line">    build(mid + <span class="number">1</span>, r, T[x].r);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> pos, <span class="keyword">int</span> v, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span>& x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    T[++cnt] = T[y], x = cnt;</span><br><span class="line">    <span class="keyword">if</span> (l == r) {</span><br><span class="line">        T[x].v = v;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) >> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (pos <= mid) {</span><br><span class="line">        update(pos, v, l, mid, T[x].l, T[y].l);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        update(pos, v, mid + <span class="number">1</span>, r, T[x].r, T[y].r);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> pos, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> cur)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (l == r) {</span><br><span class="line">        <span class="keyword">return</span> T[cur].v;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) >> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (pos <= mid) {</span><br><span class="line">        <span class="keyword">return</span> query(pos, l, mid, T[cur].l);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">return</span> query(pos, mid + <span class="number">1</span>, r, T[cur].r);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span> >> N >> M;</span><br><span class="line">    build(<span class="number">1</span>, N, root[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= M; i++) {</span><br><span class="line">        <span class="keyword">int</span> v, w, loc, u;</span><br><span class="line">        <span class="built_in">cin</span> >> v >> w >> loc;</span><br><span class="line">        <span class="keyword">if</span> (w == <span class="number">1</span>) {</span><br><span class="line">            <span class="built_in">cin</span> >> u;</span><br><span class="line">            update(loc, u, <span class="number">1</span>, N, root[i], root[v]);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            root[i] = root[v];</span><br><span class="line">            <span class="keyword">int</span> q = query(loc, <span class="number">1</span>, N, root[i]);</span><br><span class="line">            <span class="built_in">cout</span> << q << <span class="built_in">endl</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="常规题"><a href="#常规题" class="headerlink" title="常规题"></a>常规题</h2><h3 id="P1816-忠诚"><a href="#P1816-忠诚" class="headerlink" title="P1816 忠诚"></a><a href="https://www.luogu.org/problemnew/show/P1816" target="_blank" rel="noopener">P1816 忠诚</a></h3><p>R:简单的线段树应用，水。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> N, M, cnt, root;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">    <span class="keyword">int</span> l, r, mn;</span><br><span class="line">};</span><br><span class="line">Node T[maxn << <span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span>& x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    x = ++cnt;</span><br><span class="line">    <span class="keyword">if</span> (l == r) {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &T[x].mn);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) >> <span class="number">1</span>;</span><br><span class="line">    build(l, mid, T[x].l);</span><br><span class="line">    build(mid + <span class="number">1</span>, r, T[x].r);</span><br><span class="line">    T[x].mn = min(T[T[x].l].mn, T[T[x].r].mn);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> cur)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span> (l >= L && r <= R) {</span><br><span class="line">        <span class="keyword">return</span> T[cur].mn;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) >> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> mn = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">if</span> (mid >= L) {</span><br><span class="line">        mn = min(query(L, R, l, mid, T[cur].l), mn);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (mid < R) {</span><br><span class="line">        mn = min(query(L, R, mid + <span class="number">1</span>, r, T[cur].r), mn);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> mn;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &N, &M);</span><br><span class="line">    build(<span class="number">1</span>, N, root);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= M; i++) {</span><br><span class="line">        <span class="keyword">int</span> x, y;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &x, &y);</span><br><span class="line">        <span class="keyword">int</span> q = query(x, y, <span class="number">1</span>, N, root);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, q);</span><br><span class="line">    }</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;模板题&quot;&gt;&lt;a href=&quot;#模板题&quot; class=&quot;headerlink&quot; title=&quot;模板题&quot;&gt;&lt;/a&gt;模板题&lt;/h2&gt;&lt;h3 id=&quot;P3834-【模板】可持久化线段树-1（主席树）&quot;&gt;&lt;a href=&quot;#P3834-【模板】可持久化线段树-1（主席树）&quot;
      
    
    </summary>
    
      <category term="Konjak Records" scheme="http://yoursite.com/categories/Konjak-Records/"/>
    
    
      <category term="线段树" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="主席树" scheme="http://yoursite.com/tags/%E4%B8%BB%E5%B8%AD%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Konjak Record——2019.05.01</title>
    <link href="http://yoursite.com/2019/05/01/Algorithm0501/"/>
    <id>http://yoursite.com/2019/05/01/Algorithm0501/</id>
    <published>2019-05-01T02:52:51.729Z</published>
    <updated>2019-05-01T11:13:20.105Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常规题"><a href="#常规题" class="headerlink" title="常规题"></a>常规题</h2><h3 id="1、P1177-【模板】快速排序"><a href="#1、P1177-【模板】快速排序" class="headerlink" title="1、P1177 【模板】快速排序"></a><a href="https://www.luogu.org/problemnew/show/P1177" target="_blank" rel="noopener">1、P1177 【模板】快速排序</a></h3><p>分析：要求写快速排序，我很懒，就直接调用了sort函数(其实是不会)。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> f[maxn],N;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= N ; i++){</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&f[i]);</span><br><span class="line">    }</span><br><span class="line">    sort(f+<span class="number">1</span>,f+<span class="number">1</span>+N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= N ; i++){</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,f[i]);</span><br><span class="line">    }</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><h3 id="2、P1059-明明的随机数"><a href="#2、P1059-明明的随机数" class="headerlink" title="2、P1059 明明的随机数"></a><a href="https://www.luogu.org/problemnew/show/P1059" target="_blank" rel="noopener">2、P1059 明明的随机数</a></h3><p>分析：水</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> cache[<span class="number">1001</span>],N;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= N ; i++){</span><br><span class="line">        <span class="keyword">int</span> tmp;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&tmp);</span><br><span class="line">        cache[tmp]++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= <span class="number">1000</span> ; i++){</span><br><span class="line">        <span class="keyword">if</span>(cache[i])sum++;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= <span class="number">1000</span> ; i++){</span><br><span class="line">        <span class="keyword">if</span>(cache[i])<span class="built_in">printf</span>(<span class="string">"%d "</span>,i);</span><br><span class="line">    }</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="3、P1068-分数线划定"><a href="#3、P1068-分数线划定" class="headerlink" title="3、P1068 分数线划定"></a><a href="https://www.luogu.org/problemnew/show/P1068" target="_blank" rel="noopener">3、P1068 分数线划定</a></h3><p>分析：水,题意不清，语文不好看不懂。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>{</span></span><br><span class="line">    <span class="keyword">int</span> score,id;</span><br><span class="line">};</span><br><span class="line">Node nodes[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Node &a, <span class="keyword">const</span> Node &b)</span></span>{</span><br><span class="line">    <span class="keyword">if</span>(a.score == b.score){</span><br><span class="line">        <span class="keyword">return</span> a.id < b.id;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> a.score > b.score;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> N, M;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&N, &M);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= N ; i++){</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &nodes[i].id, &nodes[i].score);</span><br><span class="line">    }</span><br><span class="line">    M = <span class="keyword">int</span>(M*<span class="number">1.5</span>);</span><br><span class="line">    sort(nodes+<span class="number">1</span>,nodes+<span class="number">1</span>+N,cmp);</span><br><span class="line">    <span class="keyword">int</span> score = nodes[M].score,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= N ; i++){</span><br><span class="line">        <span class="keyword">if</span>(nodes[i].score>=score){</span><br><span class="line">            sum++;</span><br><span class="line">        }<span class="keyword">else</span>{</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,score,sum);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= N ; i++){</span><br><span class="line">        <span class="keyword">if</span>(nodes[i].score>=score){</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,nodes[i].id,nodes[i].score);</span><br><span class="line">        }<span class="keyword">else</span>{</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="4、P1583-魔法照片"><a href="#4、P1583-魔法照片" class="headerlink" title="4、P1583 魔法照片"></a><a href="https://www.luogu.org/problemnew/show/P1583" target="_blank" rel="noopener">4、P1583 魔法照片</a></h3><p>分析：水</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">20000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>{</span></span><br><span class="line">    <span class="keyword">int</span> id,w;</span><br><span class="line">};</span><br><span class="line"><span class="keyword">int</span> N,K,E[<span class="number">11</span>];</span><br><span class="line">Node nodes[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Node&a,<span class="keyword">const</span> Node&b)</span></span>{</span><br><span class="line">    <span class="keyword">if</span>(a.w==b.w)<span class="keyword">return</span> a.id < b.id;</span><br><span class="line">    <span class="keyword">return</span> a.w>b.w;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>>>N>>K;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= <span class="number">10</span> ; i++){</span><br><span class="line">        <span class="built_in">cin</span>>>E[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i<=N;i++){</span><br><span class="line">        <span class="built_in">cin</span>>>nodes[i].w;</span><br><span class="line">        nodes[i].id=i;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    sort(nodes+<span class="number">1</span>,nodes+<span class="number">1</span>+N,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= N ; i++){</span><br><span class="line">        nodes[i].w += E[(i<span class="number">-1</span>)%<span class="number">10</span>+<span class="number">1</span>];</span><br><span class="line">    }</span><br><span class="line">    sort(nodes+<span class="number">1</span>,nodes+<span class="number">1</span>+N,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ;i <=K;i++){</span><br><span class="line">        <span class="built_in">cout</span><<nodes[i].id<<<span class="string">" "</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span><<<span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="5、P1051-谁拿了最多奖学金"><a href="#5、P1051-谁拿了最多奖学金" class="headerlink" title="5、P1051 谁拿了最多奖学金"></a><a href="https://www.luogu.org/problemnew/show/P1051" target="_blank" rel="noopener">5、P1051 谁拿了最多奖学金</a></h3><p>分析：水</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="built_in">string</span> mx=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">int</span> sm = <span class="number">0</span>,N,total=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>>>N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i<=N;i++){</span><br><span class="line">        <span class="built_in">string</span> name;</span><br><span class="line">        <span class="keyword">int</span> self,shits,shitSci;</span><br><span class="line">        <span class="keyword">char</span> w,shitLeader;</span><br><span class="line">        <span class="built_in">cin</span>>>name>>self>>shits>>shitLeader>>w>>shitSci;</span><br><span class="line">        <span class="keyword">int</span> tmp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(self><span class="number">80</span>&&shitSci>=<span class="number">1</span>){</span><br><span class="line">            tmp+=<span class="number">8000</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(self><span class="number">85</span>&&shits><span class="number">80</span>){</span><br><span class="line">            tmp+=<span class="number">4000</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(self><span class="number">90</span>){</span><br><span class="line">            tmp+=<span class="number">2000</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(w==<span class="string">'Y'</span>&&self><span class="number">85</span>){</span><br><span class="line">            tmp+=<span class="number">1000</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(shitLeader==<span class="string">'Y'</span>&&shits > <span class="number">80</span>){</span><br><span class="line">            tmp+=<span class="number">850</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(tmp>sm){</span><br><span class="line">            sm=tmp,mx=name;</span><br><span class="line">        }</span><br><span class="line">        total += tmp;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span><<mx<<<span class="built_in">endl</span><<sm<<<span class="built_in">endl</span><<total<<<span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="6、P1093-奖学金"><a href="#6、P1093-奖学金" class="headerlink" title="6、P1093 奖学金"></a><a href="https://www.luogu.org/problemnew/show/P1093" target="_blank" rel="noopener">6、P1093 奖学金</a></h3><p>分析：水</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>{</span></span><br><span class="line">    <span class="keyword">int</span> chinese,math,english,id,sum;</span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Node&a,<span class="keyword">const</span> Node&b)</span></span>{</span><br><span class="line">    <span class="keyword">if</span>(a.sum==b.sum){</span><br><span class="line">        <span class="keyword">if</span>(a.chinese==b.chinese){</span><br><span class="line">            <span class="keyword">return</span> a.id<b.id;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> a.chinese>b.chinese;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> a.sum>b.sum;</span><br><span class="line">}</span><br><span class="line">Node nodes[<span class="number">305</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= N ; i++){</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&nodes[i].chinese,&nodes[i].math,&nodes[i].english);</span><br><span class="line">        nodes[i].id=i;</span><br><span class="line">        nodes[i].sum = nodes[i].chinese+nodes[i].math+nodes[i].english;</span><br><span class="line">    }</span><br><span class="line">    sort(nodes+<span class="number">1</span>,nodes+<span class="number">1</span>+N,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i= <span class="number">1</span> ; i<=<span class="number">5</span>;i++){</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,nodes[i].id,nodes[i].sum);</span><br><span class="line">    }</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="错题"><a href="#错题" class="headerlink" title="错题"></a>错题</h2><h3 id="7、P1309-瑞士轮"><a href="#7、P1309-瑞士轮" class="headerlink" title="7、P1309 瑞士轮"></a><a href="https://www.luogu.org/problemnew/show/P1309" target="_blank" rel="noopener">7、P1309 瑞士轮</a></h3><p>分析：两个有序数组归并的复杂度为O(N),如果直接排序复杂度为O(NlogN)。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N,R,Q;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>{</span></span><br><span class="line">    <span class="keyword">int</span> score,id,ability;</span><br><span class="line">};</span><br><span class="line">Node nodes[<span class="number">200000</span>+<span class="number">10</span>],n1[<span class="number">100000</span>+<span class="number">10</span>],n2[<span class="number">100000</span>+<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Node&a,<span class="keyword">const</span> Node&b)</span></span>{</span><br><span class="line">    <span class="keyword">if</span>(a.score==b.score){</span><br><span class="line">        <span class="keyword">return</span> a.id<b.id;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> a.score>b.score;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ssort</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= N; i+=<span class="number">2</span>){</span><br><span class="line">        <span class="keyword">if</span>(nodes[i].ability > nodes[i+<span class="number">1</span>].ability){</span><br><span class="line">            nodes[i].score+=<span class="number">1</span>;</span><br><span class="line">            n1[flag] = nodes[i],n2[flag] = nodes[i+<span class="number">1</span>];</span><br><span class="line">        }<span class="keyword">else</span>{</span><br><span class="line">            nodes[i+<span class="number">1</span>].score+=<span class="number">1</span>;</span><br><span class="line">            n2[flag] = nodes[i],n1[flag] = nodes[i+<span class="number">1</span>];</span><br><span class="line">        }</span><br><span class="line">        flag++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> f1=<span class="number">1</span>,f2=<span class="number">1</span>,pos=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(pos<=N){</span><br><span class="line">        <span class="keyword">if</span>(f1<=N/<span class="number">2</span>&&f2<=N/<span class="number">2</span>){</span><br><span class="line">            <span class="keyword">if</span>(cmp(n1[f1],n2[f2])){</span><br><span class="line">                nodes[pos++] = n1[f1++];</span><br><span class="line">            }<span class="keyword">else</span>{</span><br><span class="line">                nodes[pos++] = n2[f2++];</span><br><span class="line">            }</span><br><span class="line">        }<span class="keyword">else</span> <span class="keyword">if</span>(f1<=N/<span class="number">2</span>){</span><br><span class="line">            nodes[pos++] = n1[f1++];</span><br><span class="line">        }<span class="keyword">else</span>{</span><br><span class="line">            nodes[pos++] = n2[f2++];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="built_in">cin</span>>>N>>R>>Q;</span><br><span class="line">    N *= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= N ; i++){</span><br><span class="line">        <span class="built_in">cin</span>>>nodes[i].score;</span><br><span class="line">        nodes[i].id = i;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= N ; i++){</span><br><span class="line">        <span class="built_in">cin</span>>>nodes[i].ability;</span><br><span class="line">    }</span><br><span class="line">    sort(nodes+<span class="number">1</span>,nodes+<span class="number">1</span>+N,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= R ; i++){</span><br><span class="line">        ssort();</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span><<nodes[Q].id<<<span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="8、P1781-宇宙总统"><a href="#8、P1781-宇宙总统" class="headerlink" title="8、P1781 宇宙总统"></a><a href="https://www.luogu.org/problemnew/show/P1781" target="_blank" rel="noopener">8、P1781 宇宙总统</a></h3><p>分析：大数比较，用字符串，如果字符串长度相同，则按照字典序，反之越长越大。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>{</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="built_in">cin</span>>>N;</span><br><span class="line">    <span class="built_in">string</span> mx = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">int</span> id=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i <= N ; i++){</span><br><span class="line">        <span class="built_in">string</span> in;</span><br><span class="line">        <span class="built_in">cin</span>>>in;</span><br><span class="line">        <span class="keyword">if</span>(in.size()>mx.size()){</span><br><span class="line">            mx = in,id=i;</span><br><span class="line">        }<span class="keyword">else</span>{</span><br><span class="line">            <span class="keyword">if</span>(in.size()==mx.size()&&in>mx){</span><br><span class="line">                mx = in,id=i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span><<id<<<span class="built_in">endl</span><<mx<<<span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;常规题&quot;&gt;&lt;a href=&quot;#常规题&quot; class=&quot;headerlink&quot; title=&quot;常规题&quot;&gt;&lt;/a&gt;常规题&lt;/h2&gt;&lt;h3 id=&quot;1、P1177-【模板】快速排序&quot;&gt;&lt;a href=&quot;#1、P1177-【模板】快速排序&quot; class=&quot;headerlink&quot; title=&quot;1、P1177 【模板】快速排序&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1177&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1、P1177 【模板】快速排序&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;分析：要求写快速排序，我很懒，就直接调用了sort函数(其实是不会)。&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&lt;bits/stdc++.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxn = &lt;span class=&quot;number&quot;&gt;100000&lt;/span&gt;+&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; f[maxn],N;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;N);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ; i &lt;= N ; i++){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d&quot;&lt;/span&gt;,&amp;f[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sort(f+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,f+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;+N);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ; i &lt;= N ; i++){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d &quot;&lt;/span&gt;,f[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    system(&lt;span class=&quot;string&quot;&gt;&quot;pause&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Konjak Records" scheme="http://yoursite.com/categories/Konjak-Records/"/>
    
    
      <category term="排序" scheme="http://yoursite.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Konjak Record——2019.04.30</title>
    <link href="http://yoursite.com/2019/04/30/Algorithm0430/"/>
    <id>http://yoursite.com/2019/04/30/Algorithm0430/</id>
    <published>2019-04-30T06:29:16.296Z</published>
    <updated>2019-04-30T12:52:19.220Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常规题"><a href="#常规题" class="headerlink" title="常规题"></a>常规题</h2><h3 id="1、P1855-榨取kkksc03"><a href="#1、P1855-榨取kkksc03" class="headerlink" title="1、P1855 榨取kkksc03"></a><a href="https://www.luogu.org/problemnew/show/P1855" target="_blank" rel="noopener">1、P1855 榨取kkksc03</a></h3><p>分析：01背包的变形，多加一个维度就可以了</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">105</span>, maxm = <span class="number">205</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxm][maxm], m[maxm], t[maxm], N, M, T;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>, &N, &M, &T);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &m[i], &t[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = M; j >= m[i]; j--) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = T; k >= t[i]; k--) {</span><br><span class="line">                dp[j][k] = max(dp[j][k], dp[j - m[i]][k - t[i]] + <span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[M][T]);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><h2 id="错题"><a href="#错题" class="headerlink" title="错题"></a>错题</h2><h3 id="2、P1736-创意吃鱼法"><a href="#2、P1736-创意吃鱼法" class="headerlink" title="2、P1736 创意吃鱼法"></a><a href="https://www.luogu.org/problemnew/show/P1736" target="_blank" rel="noopener">2、P1736 创意吃鱼法</a></h3><p>分析：这个题调试了一个下午才AC，还是太菜了。使用的是悬线法,注意对角线共两个方向，此外必须保证除了对角线为1以外其他都为0。具体细节见代码。代码跑的很慢，复杂度是O(N2),而且我是大常数男人。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2505</span>;</span><br><span class="line"><span class="keyword">int</span> N, M;</span><br><span class="line"><span class="keyword">short</span> chess[maxn][maxn], l[maxn][maxn], L[maxn][maxn];</span><br><span class="line"><span class="keyword">short</span> r[maxn][maxn], R[maxn][maxn], u[maxn][maxn], U[maxn][maxn], f[maxn][maxn], ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &N, &M);</span><br><span class="line">    <span class="built_in">memset</span>(chess, <span class="number">-1</span>, <span class="keyword">sizeof</span>(chess));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= M; j++) {</span><br><span class="line">            <span class="built_in">cin</span> >> chess[i][j];</span><br><span class="line">            l[i][j] = j, r[i][j] = j, u[i][j] = i;</span><br><span class="line">            L[i][j] = R[i][j] = j, U[i][j] = i;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= M; j++) {</span><br><span class="line">            <span class="keyword">if</span> (chess[i][j - <span class="number">1</span>] == <span class="number">0</span>) {</span><br><span class="line">                l[i][j] = l[i][j - <span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (chess[i - <span class="number">1</span>][j] == <span class="number">0</span>) {</span><br><span class="line">                u[i][j] = u[i - <span class="number">1</span>][j];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = M; j >= <span class="number">1</span>; j--) {</span><br><span class="line">            <span class="keyword">if</span> (chess[i][j + <span class="number">1</span>] == <span class="number">0</span>) {</span><br><span class="line">                r[i][j] = r[i][j + <span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j <= M; j++) {</span><br><span class="line">            <span class="keyword">if</span> (chess[i][j]) {</span><br><span class="line">                <span class="keyword">if</span> (chess[i - <span class="number">1</span>][j - <span class="number">1</span>] == <span class="number">0</span>) {</span><br><span class="line">                    f[i][j] = <span class="number">1</span>;</span><br><span class="line">                    ans = max(ans, (<span class="keyword">short</span>)<span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">int</span> ml = max(L[i - <span class="number">1</span>][j - <span class="number">1</span>], l[i][j]);</span><br><span class="line">                <span class="keyword">int</span> mu = max(U[i - <span class="number">1</span>][j - <span class="number">1</span>], u[i][j]);</span><br><span class="line">                f[i][j] = f[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> len1 = j - ml + <span class="number">1</span>, len2 = i - mu + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> tmp = min(min((<span class="keyword">short</span>)len1, (<span class="keyword">short</span>)len2), f[i][j]);</span><br><span class="line">                ans = max((<span class="keyword">short</span>)tmp, ans);</span><br><span class="line">                L[i][j] = j - tmp + <span class="number">1</span>, U[i][j] = i - tmp + <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">memset</span>(f, <span class="number">0</span>, <span class="keyword">sizeof</span>(f)), <span class="built_in">memset</span>(U, <span class="number">0</span>, <span class="keyword">sizeof</span>(U));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = M; j >= <span class="number">1</span>; j--) {</span><br><span class="line">            <span class="keyword">if</span> (chess[i][j]) {</span><br><span class="line">                <span class="keyword">if</span> (chess[i - <span class="number">1</span>][j + <span class="number">1</span>] == <span class="number">0</span>) {</span><br><span class="line">                    f[i][j] = <span class="number">1</span>;</span><br><span class="line">                    ans = max(ans, (<span class="keyword">short</span>)<span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">int</span> mr = min(r[i][j], R[i - <span class="number">1</span>][j + <span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">int</span> mu = max(U[i - <span class="number">1</span>][j + <span class="number">1</span>], u[i][j]);</span><br><span class="line">                f[i][j] = f[i - <span class="number">1</span>][j + <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> len1 = mr - j + <span class="number">1</span>, len2 = i - mu + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> tmp = min(min((<span class="keyword">short</span>)len1, (<span class="keyword">short</span>)len2), f[i][j]);</span><br><span class="line">                ans = max((<span class="keyword">short</span>)ans, (<span class="keyword">short</span>)tmp);</span><br><span class="line">                R[i][j] = tmp + j - <span class="number">1</span>, U[i][j] = i - tmp + <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> << ans << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="3、P1541-乌龟棋"><a href="#3、P1541-乌龟棋" class="headerlink" title="3、P1541 乌龟棋"></a><a href="https://www.luogu.org/problemnew/show/P1541" target="_blank" rel="noopener">3、P1541 乌龟棋</a></h3><p>分析:这道题思路是有的，但是复杂度比别人多了一个N，还是太菜了。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//我的状态转移方程：</span></span><br><span class="line"></span><br><span class="line">f[i][j][k][l][m] = max(f[i-x][j-a1][k-a2][l-a3][n-a4]) + v[i]</span><br><span class="line"></span><br><span class="line"><span class="comment">//x取1,2,3,4。[a1,a2,a3,a4]是一个Onehot向量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// i完全可以去掉，j * 1 + k * 2 + l * 3 + m * 4 + 1就是到达的位置</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">350</span> + <span class="number">10</span>, inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">40</span>][<span class="number">40</span>][<span class="number">40</span>][<span class="number">40</span>], N, f[maxn], M, cache[<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &N, &M);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &f[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= M; i++) {</span><br><span class="line">        <span class="keyword">int</span> tmp;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &tmp);</span><br><span class="line">        cache[tmp]++;</span><br><span class="line">    }</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>] = f[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i <= cache[<span class="number">1</span>]; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j <= cache[<span class="number">2</span>]; j++) {</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k <= cache[<span class="number">3</span>]; k++) {</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l <= cache[<span class="number">4</span>]; l++) {</span><br><span class="line">                    <span class="keyword">int</span> x = i + j * <span class="number">2</span> + k * <span class="number">3</span> + l * <span class="number">4</span> + <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">                        dp[i][j][k][l] = max(dp[i - <span class="number">1</span>][j][k][l] + f[x], dp[i][j][k][l]);</span><br><span class="line">                    <span class="keyword">if</span> (j != <span class="number">0</span>)</span><br><span class="line">                        dp[i][j][k][l] = max(dp[i][j - <span class="number">1</span>][k][l] + f[x], dp[i][j][k][l]);</span><br><span class="line">                    <span class="keyword">if</span> (k != <span class="number">0</span>)</span><br><span class="line">                        dp[i][j][k][l] = max(dp[i][j][k - <span class="number">1</span>][l] + f[x], dp[i][j][k][l]);</span><br><span class="line">                    <span class="keyword">if</span> (l != <span class="number">0</span>)</span><br><span class="line">                        dp[i][j][k][l] = max(dp[i][j][k][l - <span class="number">1</span>] + f[x], dp[i][j][k][l]);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[cache[<span class="number">1</span>]][cache[<span class="number">2</span>]][cache[<span class="number">3</span>]][cache[<span class="number">4</span>]]);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="4、P1052-过河"><a href="#4、P1052-过河" class="headerlink" title="4、P1052 过河"></a><a href="https://www.luogu.org/problemnew/show/P1052" target="_blank" rel="noopener">4、P1052 过河</a></h3><p>分析：这是我第三次做错这道题了，需要思考的是路径压缩，因为L<1e9,范围太大了，而石子只有不到100个，中间很多路径是空白的，所以无论如何跳，石子数都不会变化。<br>px + (p+1)y = s,当s>=p(p+1)时有正整数解（一定有整数解，因为p,p+1互质），根据这个结论，如果两个石子之间的距离大于90，则将它们缩短为90，代码如下：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100</span> * <span class="number">110</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">px+(p+1)y = s，因为p和p+1互质，所以方程一定有解，且当s>=p(p+1)时一定有正整数解,</span></span><br><span class="line"><span class="comment">所以当路径长度大于90，则把路径压缩为90</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">int</span> S, T, M, f[maxn], dp[maxn], pos[<span class="number">110</span>], L;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> >> L >> S >> T >> M;</span><br><span class="line">    <span class="keyword">if</span> (S == T) {</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>, tmp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= M; i++) {</span><br><span class="line">            <span class="built_in">cin</span> >> tmp;</span><br><span class="line">            <span class="keyword">if</span> (tmp % S == <span class="number">0</span>) {</span><br><span class="line">                cnt++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= M; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> pos[i];</span><br><span class="line">    }</span><br><span class="line">    sort(pos + <span class="number">1</span>, pos + <span class="number">1</span> + M);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= M; i++) {</span><br><span class="line">        <span class="keyword">int</span> tmp = min(<span class="number">91</span>, pos[i] - pos[i - <span class="number">1</span>]);</span><br><span class="line">        sum += tmp;</span><br><span class="line">        f[sum] = <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    sum += <span class="number">91</span>;</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= sum; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> s = S; s <= T; s++) {</span><br><span class="line">            <span class="keyword">if</span> (i - s >= <span class="number">0</span>) {</span><br><span class="line">                dp[i] = min(dp[i - s], dp[i]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        dp[i] += f[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[sum]);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="5、P1156-垃圾陷阱"><a href="#5、P1156-垃圾陷阱" class="headerlink" title="5、P1156 垃圾陷阱"></a><a href="https://www.luogu.org/problemnew/show/P1156" target="_blank" rel="noopener">5、P1156 垃圾陷阱</a></h3><p>分析：细节很多，例如使用哪几个维度dp，dp中间提前退出，状态转移的条件。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxh = <span class="number">105</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxh][maxh], D, G;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">    <span class="keyword">int</span> t, f, h;</span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Node& a, <span class="keyword">const</span> Node& b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.t < b.t;</span><br><span class="line">}</span><br><span class="line">Node nodes[maxh];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> >> D >> G;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= G; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> nodes[i].t >> nodes[i].f >> nodes[i].h;</span><br><span class="line">    }</span><br><span class="line">    sort(nodes + <span class="number">1</span>, nodes + <span class="number">1</span> + G, cmp);</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">-1</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= G; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j <= D; j++) {</span><br><span class="line">            <span class="keyword">int</span> pay = nodes[i].t - nodes[i - <span class="number">1</span>].t;</span><br><span class="line">            <span class="keyword">if</span> (dp[i - <span class="number">1</span>][j] >= pay && j + nodes[i].h >= D) {</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, nodes[i].t);</span><br><span class="line">                system(<span class="string">"pause"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (dp[i - <span class="number">1</span>][j] >= pay) {</span><br><span class="line">                dp[i][j] = dp[i - <span class="number">1</span>][j] - pay + nodes[i].f;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (j >= nodes[i].h && dp[i - <span class="number">1</span>][j - nodes[i].h] >= pay) {</span><br><span class="line">                dp[i][j] = max(dp[i][j], dp[i - <span class="number">1</span>][j - nodes[i].h] - pay);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> maxt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i <= G; i++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j <= D; j++) {</span><br><span class="line">            <span class="keyword">if</span> (dp[i][j] > <span class="number">0</span>) {</span><br><span class="line">                maxt = max(maxt, dp[i][j] + nodes[i].t);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, maxt);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;常规题&quot;&gt;&lt;a href=&quot;#常规题&quot; class=&quot;headerlink&quot; title=&quot;常规题&quot;&gt;&lt;/a&gt;常规题&lt;/h2&gt;&lt;h3 id=&quot;1、P1855-榨取kkksc03&quot;&gt;&lt;a href=&quot;#1、P1855-榨取kkksc03&quot; class=&quot;headerlink&quot; title=&quot;1、P1855 榨取kkksc03&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1855&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1、P1855 榨取kkksc03&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;分析：01背包的变形，多加一个维度就可以了&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&lt;bits/stdc++.h&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxn = &lt;span class=&quot;number&quot;&gt;105&lt;/span&gt;, maxm = &lt;span class=&quot;number&quot;&gt;205&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; dp[maxm][maxm], m[maxm], t[maxm], N, M, T;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d %d %d&quot;&lt;/span&gt;, &amp;N, &amp;M, &amp;T);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &lt;= N; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;scanf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d %d&quot;&lt;/span&gt;, &amp;m[i], &amp;t[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &lt;= N; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = M; j &gt;= m[i]; j--) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; k = T; k &gt;= t[i]; k--) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dp[j][k] = max(dp[j][k], dp[j - m[i]][k - t[i]] + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;%d\n&quot;&lt;/span&gt;, dp[M][T]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    system(&lt;span class=&quot;string&quot;&gt;&quot;pause&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Konjak Records" scheme="http://yoursite.com/categories/Konjak-Records/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Konjak Record——2019.04.29</title>
    <link href="http://yoursite.com/2019/04/29/Algorithm0429/"/>
    <id>http://yoursite.com/2019/04/29/Algorithm0429/</id>
    <published>2019-04-29T06:38:36.135Z</published>
    <updated>2019-04-29T11:27:18.615Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常规题"><a href="#常规题" class="headerlink" title="常规题"></a>常规题</h2><h3 id="1、P1140-相似基因"><a href="#1、P1140-相似基因" class="headerlink" title="1、P1140 相似基因"></a><a href="https://www.luogu.org/problemnew/show/P1140" target="_blank" rel="noopener">1、P1140 相似基因</a></h3><p>分析：LCS的变形，水题</p><a id="more"></a><h3 id="2、P1282-多米诺骨牌"><a href="#2、P1282-多米诺骨牌" class="headerlink" title="2、P1282 多米诺骨牌"></a><a href="https://www.luogu.org/problemnew/show/P1282" target="_blank" rel="noopener">2、P1282 多米诺骨牌</a></h3><p>分析：背包的变形，记录上下差值为M时的最小翻转次数，因为有正负，所以多开一维表达正负数。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sub = up[i] - down[i]</span><br><span class="line">dp[i][j] = min(dp[i - <span class="number">1</span>][j - sub],dp[i - <span class="number">1</span>][j + sub] + <span class="number">1</span>)</span><br><span class="line">-maxm < j < maxm,<span class="number">1</span> <= i <= maxn</span><br></pre></td></tr></tbody></table></figure><h3 id="3、P1508-Likecloud-吃、吃、吃"><a href="#3、P1508-Likecloud-吃、吃、吃" class="headerlink" title="3、P1508 Likecloud-吃、吃、吃"></a><a href="https://www.luogu.org/problemnew/show/P1508" target="_blank" rel="noopener">3、P1508 Likecloud-吃、吃、吃</a></h3><p>分析:无敌水题。</p><h3 id="4、P1387-最大正方形"><a href="#4、P1387-最大正方形" class="headerlink" title="4、P1387 最大正方形"></a><a href="https://www.luogu.org/problemnew/show/P1387" target="_blank" rel="noopener">4、P1387 最大正方形</a></h3><p>分析:悬线法，极大子矩形。</p><h2 id="错题"><a href="#错题" class="headerlink" title="错题"></a>错题</h2><h3 id="5、P1880-NOI1995-石子合并"><a href="#5、P1880-NOI1995-石子合并" class="headerlink" title="5、P1880 [NOI1995]石子合并"></a><a href="https://www.luogu.org/problemnew/show/P1880" target="_blank" rel="noopener">5、P1880 [NOI1995]石子合并</a></h3><p>状态转移方程如下：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp[s][e] = max(dp[s][k] + dp[k+<span class="number">1</span>][e] + sum[e] - sum[s<span class="number">-1</span>],dp[s][e])</span><br></pre></td></tr></tbody></table></figure><p>1、考虑操场是环状的，因此需要破环成链，链的长度2<em>N，枚举起点s时一定不要只枚举到N，需要枚举到2</em>N。<br>2、最后计算答案时取dp[s][s+N-1]中的最大/最小值，此时枚举s从1到N。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">200</span> + <span class="number">5</span>, inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn], sum[maxn], N, f[maxn], mx = <span class="number">0</span>, mn = inf;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &f[i]);</span><br><span class="line">        f[i + N] = f[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= <span class="number">2</span> * N; i++) {</span><br><span class="line">        sum[i] = sum[i - <span class="number">1</span>] + f[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//O(n3)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">1</span>; len < N; len++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> s = <span class="number">1</span>; s <= <span class="number">2</span> * N; s++) {</span><br><span class="line">            <span class="keyword">int</span> e = s + len;</span><br><span class="line">            <span class="keyword">if</span> (e > <span class="number">2</span> * N) {</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = s; k < e; k++) {</span><br><span class="line">                dp[s][e] = max(dp[s][k] + dp[k + <span class="number">1</span>][e] + sum[e] - sum[s - <span class="number">1</span>], dp[s][e]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        mx = max(mx, dp[i][i + N - <span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i <= <span class="number">2</span> * N; i++) {</span><br><span class="line">        dp[i][i] = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//O(n3)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">1</span>; len < N; len++) {</span><br><span class="line">        <span class="comment">//注意s枚举范围</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> s = <span class="number">1</span>; s <= <span class="number">2</span> * N; s++) {</span><br><span class="line">            <span class="keyword">int</span> e = s + len;</span><br><span class="line">            <span class="keyword">if</span> (e > <span class="number">2</span> * N) {</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = s; k < e; k++) {</span><br><span class="line">                dp[s][e] = min(dp[s][k] + dp[k + <span class="number">1</span>][e] + sum[e] - sum[s - <span class="number">1</span>], dp[s][e]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        mn = min(mn, dp[i][i + N - <span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n%d\n"</span>, mn, mx);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="6、P1417-烹调方案"><a href="#6、P1417-烹调方案" class="headerlink" title="6、P1417 烹调方案"></a><a href="https://www.luogu.org/problemnew/show/P1417" target="_blank" rel="noopener">6、P1417 烹调方案</a></h3><p>分析：01背包的变形，关键是01背包取的先后顺序不影响最终结果，所以可以从1-N顺序dp，但是这道题价值与时间相关，所以需要做一个排序。假设当前时间为t，有两件物品x,y，则分别计算xy和yx的价值，可以得到一个结论，按照这个结论对物品进行排序，最后将其当作01背包即可。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">50</span> + <span class="number">10</span>, maxt = <span class="number">100000</span> + <span class="number">10</span>, inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">    ll a, b, t;</span><br><span class="line">};</span><br><span class="line">Node nodes[maxn];</span><br><span class="line">ll N, T;</span><br><span class="line">ll dp[maxt];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Node& a, <span class="keyword">const</span> Node& b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.b * b.t > b.b * a.t;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> >> T >> N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> nodes[i].a;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> nodes[i].b;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> nodes[i].t;</span><br><span class="line">    }</span><br><span class="line">    sort(nodes + <span class="number">1</span>, nodes + <span class="number">1</span> + N, cmp);</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (ll j = T; j >= nodes[i].t; j--) {</span><br><span class="line">            dp[j] = max(dp[j - nodes[i].t] + nodes[i].a - nodes[i].b * j, dp[j]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i <= T; i++) {</span><br><span class="line">        ans = max(ans, dp[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> << ans << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;常规题&quot;&gt;&lt;a href=&quot;#常规题&quot; class=&quot;headerlink&quot; title=&quot;常规题&quot;&gt;&lt;/a&gt;常规题&lt;/h2&gt;&lt;h3 id=&quot;1、P1140-相似基因&quot;&gt;&lt;a href=&quot;#1、P1140-相似基因&quot; class=&quot;headerlink&quot; title=&quot;1、P1140 相似基因&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1140&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1、P1140 相似基因&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;分析：LCS的变形，水题&lt;/p&gt;
    
    </summary>
    
      <category term="Konjak Records" scheme="http://yoursite.com/categories/Konjak-Records/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Chtholly Nota Seniorious</title>
    <link href="http://yoursite.com/2019/04/26/Chtholly%20Nota%20Seniorious/"/>
    <id>http://yoursite.com/2019/04/26/Chtholly Nota Seniorious/</id>
    <published>2019-04-26T05:29:26.974Z</published>
    <updated>2019-04-26T07:21:56.264Z</updated>
    
    <content type="html"><![CDATA[<h4 id="C"><a href="#C" class="headerlink" title="C++"></a><a href="https://baike.baidu.com/item/%E7%8F%82%E6%9C%B5%E8%8E%89%C2%B7%E8%AF%BA%E5%A1%94%C2%B7%E7%91%9F%E5%B0%BC%E6%AC%A7%E9%87%8C%E6%96%AF/20617326?fr=aladdin" target="_blank" rel="noopener">C++</a></h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> << <span class="string">"Chtholly Nota Seniorious"</span> << <span class="built_in">endl</span>;</span><br></pre></td></tr></tbody></table></figure><p><img src="http://oduesp.github.io/images/keduoli.jpg" alt="keduoli"><br><a id="more"></a></p><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a><a href="https://baike.baidu.com/item/%E7%8F%82%E6%9C%B5%E8%8E%89%C2%B7%E8%AF%BA%E5%A1%94%C2%B7%E7%91%9F%E5%B0%BC%E6%AC%A7%E9%87%8C%E6%96%AF/20617326?fr=aladdin" target="_blank" rel="noopener">Java</a></h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"Chtholly Nota Seniorious"</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="http://oduesp.github.io/images/sci.jpg" alt="sci"></p><h4 id="C-1"><a href="#C-1" class="headerlink" title="C"></a><a href="https://baike.baidu.com/item/%E7%8F%82%E6%9C%B5%E8%8E%89%C2%B7%E8%AF%BA%E5%A1%94%C2%B7%E7%91%9F%E5%B0%BC%E6%AC%A7%E9%87%8C%E6%96%AF/20617326?fr=aladdin" target="_blank" rel="noopener">C</a></h4><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"Chtholly Nota Seniorious\n"</span>);</span><br></pre></td></tr></tbody></table></figure><p><img src="http://oduesp.github.io/images/kdl.jpg" alt="kdl"></p><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a><a href="https://baike.baidu.com/item/%E7%8F%82%E6%9C%B5%E8%8E%89%C2%B7%E8%AF%BA%E5%A1%94%C2%B7%E7%91%9F%E5%B0%BC%E6%AC%A7%E9%87%8C%E6%96%AF/20617326?fr=aladdin" target="_blank" rel="noopener">Python</a></h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Chtholly Nota Seniorious"</span>)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;C&quot;&gt;&lt;a href=&quot;#C&quot; class=&quot;headerlink&quot; title=&quot;C++&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://baike.baidu.com/item/%E7%8F%82%E6%9C%B5%E8%8E%89%C2%B7%E8%AF%BA%E5%A1%94%C2%B7%E7%91%9F%E5%B0%BC%E6%AC%A7%E9%87%8C%E6%96%AF/20617326?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C++&lt;/a&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &lt;&lt; &lt;span class=&quot;string&quot;&gt;&quot;Chtholly Nota Seniorious&quot;&lt;/span&gt; &lt;&lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://oduesp.github.io/images/keduoli.jpg&quot; alt=&quot;keduoli&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="科学" scheme="http://yoursite.com/categories/%E7%A7%91%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/04/25/hello-world/"/>
    <id>http://yoursite.com/2019/04/25/hello-world/</id>
    <published>2019-04-25T03:08:59.435Z</published>
    <updated>2019-04-26T04:29:16.111Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
