<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Oduesp</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-29T11:27:18.615Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Oduesp</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Konjak Record——2019.04.29</title>
    <link href="http://yoursite.com/2019/04/29/Algorithm0429/"/>
    <id>http://yoursite.com/2019/04/29/Algorithm0429/</id>
    <published>2019-04-29T06:38:36.135Z</published>
    <updated>2019-04-29T11:27:18.615Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常规题"><a href="#常规题" class="headerlink" title="常规题"></a>常规题</h2><h3 id="1、P1140-相似基因"><a href="#1、P1140-相似基因" class="headerlink" title="1、P1140 相似基因"></a><a href="https://www.luogu.org/problemnew/show/P1140" target="_blank" rel="noopener">1、P1140 相似基因</a></h3><p>分析：LCS的变形，水题</p><a id="more"></a><h3 id="2、P1282-多米诺骨牌"><a href="#2、P1282-多米诺骨牌" class="headerlink" title="2、P1282 多米诺骨牌"></a><a href="https://www.luogu.org/problemnew/show/P1282" target="_blank" rel="noopener">2、P1282 多米诺骨牌</a></h3><p>分析：背包的变形，记录上下差值为M时的最小翻转次数，因为有正负，所以多开一维表达正负数。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sub = up[i] - down[i]</span><br><span class="line">dp[i][j] = min(dp[i - <span class="number">1</span>][j - sub],dp[i - <span class="number">1</span>][j + sub] + <span class="number">1</span>)</span><br><span class="line">-maxm < j < maxm,<span class="number">1</span> <= i <= maxn</span><br></pre></td></tr></tbody></table></figure><h3 id="3、P1508-Likecloud-吃、吃、吃"><a href="#3、P1508-Likecloud-吃、吃、吃" class="headerlink" title="3、P1508 Likecloud-吃、吃、吃"></a><a href="https://www.luogu.org/problemnew/show/P1508" target="_blank" rel="noopener">3、P1508 Likecloud-吃、吃、吃</a></h3><p>分析:无敌水题。</p><h3 id="4、P1387-最大正方形"><a href="#4、P1387-最大正方形" class="headerlink" title="4、P1387 最大正方形"></a><a href="https://www.luogu.org/problemnew/show/P1387" target="_blank" rel="noopener">4、P1387 最大正方形</a></h3><p>分析:悬线法，极大子矩形。</p><h2 id="错题"><a href="#错题" class="headerlink" title="错题"></a>错题</h2><h3 id="5、P1880-NOI1995-石子合并"><a href="#5、P1880-NOI1995-石子合并" class="headerlink" title="5、P1880 [NOI1995]石子合并"></a><a href="https://www.luogu.org/problemnew/show/P1880" target="_blank" rel="noopener">5、P1880 [NOI1995]石子合并</a></h3><p>状态转移方程如下：</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp[s][e] = max(dp[s][k] + dp[k+<span class="number">1</span>][e] + sum[e] - sum[s<span class="number">-1</span>],dp[s][e])</span><br></pre></td></tr></tbody></table></figure><p>1、考虑操场是环状的，因此需要破环成链，链的长度2<em>N，枚举起点s时一定不要只枚举到N，需要枚举到2</em>N。<br>2、最后计算答案时取dp[s][s+N-1]中的最大/最小值，此时枚举s从1到N。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">200</span> + <span class="number">5</span>, inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn][maxn], sum[maxn], N, f[maxn], mx = <span class="number">0</span>, mn = inf;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &f[i]);</span><br><span class="line">        f[i + N] = f[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= <span class="number">2</span> * N; i++) {</span><br><span class="line">        sum[i] = sum[i - <span class="number">1</span>] + f[i];</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//O(n3)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">1</span>; len < N; len++) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> s = <span class="number">1</span>; s <= <span class="number">2</span> * N; s++) {</span><br><span class="line">            <span class="keyword">int</span> e = s + len;</span><br><span class="line">            <span class="keyword">if</span> (e > <span class="number">2</span> * N) {</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = s; k < e; k++) {</span><br><span class="line">                dp[s][e] = max(dp[s][k] + dp[k + <span class="number">1</span>][e] + sum[e] - sum[s - <span class="number">1</span>], dp[s][e]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        mx = max(mx, dp[i][i + N - <span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i <= <span class="number">2</span> * N; i++) {</span><br><span class="line">        dp[i][i] = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//O(n3)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">1</span>; len < N; len++) {</span><br><span class="line">        <span class="comment">//注意s枚举范围</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> s = <span class="number">1</span>; s <= <span class="number">2</span> * N; s++) {</span><br><span class="line">            <span class="keyword">int</span> e = s + len;</span><br><span class="line">            <span class="keyword">if</span> (e > <span class="number">2</span> * N) {</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = s; k < e; k++) {</span><br><span class="line">                dp[s][e] = min(dp[s][k] + dp[k + <span class="number">1</span>][e] + sum[e] - sum[s - <span class="number">1</span>], dp[s][e]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        mn = min(mn, dp[i][i + N - <span class="number">1</span>]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n%d\n"</span>, mn, mx);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="6、P1417-烹调方案"><a href="#6、P1417-烹调方案" class="headerlink" title="6、P1417 烹调方案"></a><a href="https://www.luogu.org/problemnew/show/P1417" target="_blank" rel="noopener">6、P1417 烹调方案</a></h3><p>分析：01背包的变形，关键是01背包取的先后顺序不影响最终结果，所以可以从1-N顺序dp，但是这道题价值与时间相关，所以需要做一个排序。假设当前时间为t，有两件物品x,y，则分别计算xy和yx的价值，可以得到一个结论，按照这个结论对物品进行排序，最后将其当作01背包即可。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string"><bits/stdc++.h></span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">50</span> + <span class="number">10</span>, maxt = <span class="number">100000</span> + <span class="number">10</span>, inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> {</span></span><br><span class="line">    ll a, b, t;</span><br><span class="line">};</span><br><span class="line">Node nodes[maxn];</span><br><span class="line">ll N, T;</span><br><span class="line">ll dp[maxt];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Node& a, <span class="keyword">const</span> Node& b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.b * b.t > b.b * a.t;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">cin</span> >> T >> N;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> nodes[i].a;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> nodes[i].b;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="built_in">cin</span> >> nodes[i].t;</span><br><span class="line">    }</span><br><span class="line">    sort(nodes + <span class="number">1</span>, nodes + <span class="number">1</span> + N, cmp);</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i <= N; i++) {</span><br><span class="line">        <span class="keyword">for</span> (ll j = T; j >= nodes[i].t; j--) {</span><br><span class="line">            dp[j] = max(dp[j - nodes[i].t] + nodes[i].a - nodes[i].b * j, dp[j]);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = <span class="number">1</span>; i <= T; i++) {</span><br><span class="line">        ans = max(ans, dp[i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">cout</span> << ans << <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;常规题&quot;&gt;&lt;a href=&quot;#常规题&quot; class=&quot;headerlink&quot; title=&quot;常规题&quot;&gt;&lt;/a&gt;常规题&lt;/h2&gt;&lt;h3 id=&quot;1、P1140-相似基因&quot;&gt;&lt;a href=&quot;#1、P1140-相似基因&quot; class=&quot;headerlink&quot; title=&quot;1、P1140 相似基因&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1140&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1、P1140 相似基因&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;分析：LCS的变形，水题&lt;/p&gt;
    
    </summary>
    
      <category term="Konjak Records" scheme="http://yoursite.com/categories/Konjak-Records/"/>
    
    
      <category term="动态规划" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>Chtholly Nota Seniorious</title>
    <link href="http://yoursite.com/2019/04/26/Chtholly%20Nota%20Seniorious/"/>
    <id>http://yoursite.com/2019/04/26/Chtholly Nota Seniorious/</id>
    <published>2019-04-26T05:29:26.974Z</published>
    <updated>2019-04-26T07:21:56.264Z</updated>
    
    <content type="html"><![CDATA[<h4 id="C"><a href="#C" class="headerlink" title="C++"></a><a href="https://baike.baidu.com/item/%E7%8F%82%E6%9C%B5%E8%8E%89%C2%B7%E8%AF%BA%E5%A1%94%C2%B7%E7%91%9F%E5%B0%BC%E6%AC%A7%E9%87%8C%E6%96%AF/20617326?fr=aladdin" target="_blank" rel="noopener">C++</a></h4><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cout</span> << <span class="string">"Chtholly Nota Seniorious"</span> << <span class="built_in">endl</span>;</span><br></pre></td></tr></tbody></table></figure><p><img src="http://oduesp.github.io/images/keduoli.jpg" alt="keduoli"><br><a id="more"></a></p><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a><a href="https://baike.baidu.com/item/%E7%8F%82%E6%9C%B5%E8%8E%89%C2%B7%E8%AF%BA%E5%A1%94%C2%B7%E7%91%9F%E5%B0%BC%E6%AC%A7%E9%87%8C%E6%96%AF/20617326?fr=aladdin" target="_blank" rel="noopener">Java</a></h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">"Chtholly Nota Seniorious"</span>)</span><br></pre></td></tr></tbody></table></figure><p><img src="http://oduesp.github.io/images/sci.jpg" alt="sci"></p><h4 id="C-1"><a href="#C-1" class="headerlink" title="C"></a><a href="https://baike.baidu.com/item/%E7%8F%82%E6%9C%B5%E8%8E%89%C2%B7%E8%AF%BA%E5%A1%94%C2%B7%E7%91%9F%E5%B0%BC%E6%AC%A7%E9%87%8C%E6%96%AF/20617326?fr=aladdin" target="_blank" rel="noopener">C</a></h4><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"Chtholly Nota Seniorious\n"</span>);</span><br></pre></td></tr></tbody></table></figure><p><img src="http://oduesp.github.io/images/kdl.jpg" alt="kdl"></p><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a><a href="https://baike.baidu.com/item/%E7%8F%82%E6%9C%B5%E8%8E%89%C2%B7%E8%AF%BA%E5%A1%94%C2%B7%E7%91%9F%E5%B0%BC%E6%AC%A7%E9%87%8C%E6%96%AF/20617326?fr=aladdin" target="_blank" rel="noopener">Python</a></h4><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"Chtholly Nota Seniorious"</span>)</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;C&quot;&gt;&lt;a href=&quot;#C&quot; class=&quot;headerlink&quot; title=&quot;C++&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://baike.baidu.com/item/%E7%8F%82%E6%9C%B5%E8%8E%89%C2%B7%E8%AF%BA%E5%A1%94%C2%B7%E7%91%9F%E5%B0%BC%E6%AC%A7%E9%87%8C%E6%96%AF/20617326?fr=aladdin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;C++&lt;/a&gt;&lt;/h4&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &lt;&lt; &lt;span class=&quot;string&quot;&gt;&quot;Chtholly Nota Seniorious&quot;&lt;/span&gt; &lt;&lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://oduesp.github.io/images/keduoli.jpg&quot; alt=&quot;keduoli&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="科学" scheme="http://yoursite.com/categories/%E7%A7%91%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/04/25/hello-world/"/>
    <id>http://yoursite.com/2019/04/25/hello-world/</id>
    <published>2019-04-25T03:08:59.435Z</published>
    <updated>2019-04-26T04:29:16.111Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
